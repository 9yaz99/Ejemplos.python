# -*- coding: utf-8 -*-
"""Ejemplos python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mVQ3slEmNT7uf3khUTxtw2K-f-SxdzVi
"""

import math
import os
import random
import re
import sys

"""###Task
Given an integer, , perform the following conditional actions:\
If  is odd, print Weird\
If  is even and in the inclusive range of  to , print Not Weird\
If  is even and in the inclusive range of  to , print Weird\
If  is even and greater than , print Not Weird
"""

numero=int(input("Introduce un número: "))
if numero%2!=0:
    print("Weird")
elif 2<=numero<=5:
    print("Not weird")
elif 6<=numero<=20:
    print("Weird")
elif numero>20:
    print("Not weird")

####Operaciones aritméticas
a = int(input())
b = int(input())
def operaciones(a,b):
  print(a+b,a-b,a*b)
operaciones(a,b)

a = int(input())
b = int(input())
def div(a,b):
  div=a//b
  mod=a/b
  print(div,mod)
div(a,b)

"""**Task**
The provided code stub reads and integer, *n*, from STDIN. For all non-negative integers, $i<n$ , print $i^2$.
"""

n = int(input())
for i in range(0,n):
    print(i**2)

"""In the Gregorian calendar, three conditions are used to identify leap years:

The year can be evenly divided by 4, is a leap year, unless:
The year can be evenly divided by 100, it is NOT a leap year, unless:
The year is also evenly divisible by 400. Then it is a leap year.
This means that in the Gregorian calendar, the years 2000 and 2400 are leap years, while 1800, 1900, 2100, 2200, 2300 and 2500 are NOT leap years. Source

Task

Given a year, determine whether it is a leap year. If it is a leap year, return the Boolean True, otherwise return False.
"""

def is_leap(year):
  leap = False
  if year%4==0 and (year%100!=0 or year%400==0):
         leap=True 
  return leap

year = int(input())
print(is_leap(year))

"""**Task**

Without using any string methods, try to print the following: $123..n$. Note that $"..."$ represents the consecutive values in between.
"""

n=int(input())
for i in range(n):
  print(i+1,end="")

"""##'The Minion Game'.

Game Rules

Both players are given the same string, .
Both players have to make substrings using the letters of the string .
Stuart has to make words starting with consonants.
Kevin has to make words starting with vowels.
The game ends when both players have made all possible substrings.

Scoring
A player gets +1 point for each occurrence of the substring in the string .

For Example:
String  = BANANA
Kevin's vowel beginning word = ANA
Here, ANA occurs twice in BANANA. Hence, Kevin will get 2 Points.

"""

vocales="aeiou"
def minion_game(s):
  s=s.lower()
  cont1=0
  cont2=0
  for i in range(len(s)):
    if s[i] in vocales:
      cont1=cont1+len(s)-i
    else:
      cont2=cont2+len(s)-i
  if cont1>cont2:
         print(f"Kevin {cont1}")
  elif cont2>cont1:
         print(f"Stuart {cont2}")
  else:
      print("Draw")

minion_game("BANANA")